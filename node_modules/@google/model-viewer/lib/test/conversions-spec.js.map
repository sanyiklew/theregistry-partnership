{"version":3,"file":"conversions-spec.js","sourceRoot":"","sources":["../../src/test/conversions-spec.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAEH,OAAO,EAAC,IAAI,IAAI,SAAS,EAAC,MAAM,OAAO,CAAC;AACxC,OAAO,EAAC,oBAAoB,EAAC,MAAM,mBAAmB,CAAC;AAEvD,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3B,KAAK,CAAC,aAAa,EAAE,GAAG,EAAE;IACxB,KAAK,CAAC,sBAAsB,EAAE,GAAG,EAAE;QACjC,IAAI,CAAC,iDAAiD,EAAE,GAAG,EAAE;YAC3D,MAAM,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,2DAA2D,EAAE,GAAG,EAAE;YACrE,MAAM,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mDAAmD,EAAE,GAAG,EAAE;YAC7D,MAAM,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,IAAI,CACA,gEAAgE,EAChE,GAAG,EAAE;YACH,MAAM,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAC;iBAC5C,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QAEP,IAAI,CAAC,2CAA2C,EAAE,GAAG,EAAE;YACrD,MAAM,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;YAClE,MAAM,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oCAAoC,EAAE,GAAG,EAAE;YAC9C,MAAM,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Math as ThreeMath} from 'three';\nimport {deserializeSpherical} from '../conversions.js';\n\nconst expect = chai.expect;\n\nsuite('conversions', () => {\n  suite('deserializeSpherical', () => {\n    test('converts a spherical string to spherical values', () => {\n      expect(deserializeSpherical('0rad 1.23rad 1m')).to.be.eql([0, 1.23, 1]);\n    });\n\n    test('assumes radians when units are omitted from theta and phi', () => {\n      expect(deserializeSpherical('1.23 0 1m')).to.be.eql([1.23, 0, 1]);\n    });\n\n    test('assumes meters when units are omitted from radius', () => {\n      expect(deserializeSpherical('1rad 20rad 3')).to.be.eql([1, 20, 3]);\n    });\n\n    test(\n        'allows degress to be used instead of radians for theta and phi',\n        () => {\n          expect(deserializeSpherical('9.9rad 3.14deg 1m'))\n              .to.be.eql([9.9, ThreeMath.degToRad(3.14), 1]);\n        });\n\n    test('allows radius to be expressed in mm or cm', () => {\n      expect(deserializeSpherical('0 0 23mm')).to.be.eql([0, 0, 0.023]);\n      expect(deserializeSpherical('0 0 100cm')).to.be.eql([0, 0, 1]);\n    });\n\n    test('is resilient to awkward whitespace', () => {\n      expect(deserializeSpherical('  0 0\\n   0 ')).to.be.eql([0, 0, 0]);\n    });\n  });\n});\n"]}