{"version":3,"file":"controls.js","sourceRoot":"","sources":["../../src/features/controls.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;;;;;;;AAEH,OAAO,EAAC,QAAQ,EAAC,MAAM,aAAa,CAAC;AACrC,OAAO,EAAoB,SAAS,EAAC,MAAM,OAAO,CAAC;AAEnD,OAAO,EAAC,oBAAoB,EAAC,MAAM,mBAAmB,CAAC;AACvD,OAA+B,EAAC,UAAU,EAAE,YAAY,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAC,MAAM,yBAAyB,CAAC;AACjI,OAAO,EAAC,aAAa,EAAC,MAAM,mCAAmC,CAAC;AAChE,OAAO,EAAC,cAAc,EAAC,MAAM,uCAAuC,CAAC;AAUrE,MAAM,oBAAoB,GAAG,iBAAiB,CAAC;AAE/C,MAAM,OAAO,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;AAC9B,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;AAC/B,MAAM,UAAU,GAAG,OAAO,GAAG,GAAG,CAAC;AACjC,MAAM,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;AAE1B,MAAM,yBAAyB,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AACrE,MAAM,mBAAmB,GAAG,CAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;AAErD,MAAM,uBAAuB,GAAG,aAAa,GAAG,IAAI,CAAC;AACrD,MAAM,sBAAsB,GAAG,aAAa,GAAG,IAAI,CAAC;AAEpD,MAAM,CAAC,MAAM,oCAAoC,GAAG,IAAI,CAAC;AACzD,MAAM,CAAC,MAAM,kBAAkB,GAC3B,uDAAuD,CAAC;AAE5D,MAAM,CAAC,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AAC5C,MAAM,CAAC,MAAM,cAAc,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AAEtD,MAAM,uBAAuB,GAAG,MAAM,CAAC,wBAAwB,CAAC,CAAC;AACjE,MAAM,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;AACzC,MAAM,kBAAkB,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC;AACvD,MAAM,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;AAC3C,MAAM,cAAc,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AAE/C,MAAM,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;AAC3C,MAAM,aAAa,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;AAC7C,MAAM,cAAc,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AAC/C,MAAM,2BAA2B,GAAG,MAAM,CAAC,4BAA4B,CAAC,CAAC;AAEzE,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AACjC,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AACnC,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AACrC,MAAM,sBAAsB,GAAG,MAAM,CAAC,uBAAuB,CAAC,CAAC;AAE/D,MAAM,2BAA2B,GAAG,MAAM,CAAC,4BAA4B,CAAC,CAAC;AACzE,MAAM,oBAAoB,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC;AAC3D,MAAM,iBAAiB,GAAG,MAAM,CAAC,kBAAkB,CAAC,CAAC;AACrD,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AAErC,MAAM,cAAc,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AAE/C,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,kBACuC,EAC7B,EAAE;;IACpC,MAAM,0BAA2B,SAAQ,kBAAkB;QAiCzD;YACE,KAAK,EAAE,CAAC;YAhCV,mBAAc,GAAY,KAAK,CAAC;YAIhC,gBAAW,GAAW,oBAAoB,CAAC;YAG3C,+BAA0B,GACtB,oCAAoC,CAAC;YAOhC,QAAW,GAAW,CAAC,CAAC;YACxB,QAAmB,GAAY,KAAK,CAAC;YACrC,QAAsB,GAAY,KAAK,CAAC;YACxC,QAA6B,GAAY,IAAI,CAAC;YAI9C,QAAgB,GAAc,IAAI,SAAS,EAAE,CAAC;YAE9C,QAAgB,GAAe,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;YACvD,QAAe,GAAe,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YACrD,QAAc,GAAe,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;YAEnD,QAA6B,GACrB,GAAG,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC;YAIpD,MAAM,KAAK,GAAI,IAAY,CAAC,MAAM,CAAC,CAAC;YAEpC,IAAI,CAAC,cAAc,CAAC;gBAChB,IAAI,CAAC,UAAW,CAAC,aAAa,CAAC,kBAAkB,CAAE,CAAC;YAExD,IAAI,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,CAAC;YAElD,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,GAAG,uBAAuB,CAAC;YAClD,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,GAAG,sBAAsB,CAAC;YAChD,IAAI,CAAC,YAAY,CAAC,CAAC,sBAAsB,EAAE,CAAC;YAE5C,IAAI,CAAC,SAAS,CAAC;gBACX,IAAI,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;YACzD,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,aAAa,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YAEpD,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;QACtC,CAAC;QAED,cAAc;YACZ,MAAM,EAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;YAClD,OAAO,EAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,GAAG,aAAa,EAAC,CAAC;QACtD,CAAC;QAED,iBAAiB;YACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;YAE1B,IAAI,CAAC,2BAA2B,CAAC,EAAE,CAAC;YACpC,IAAI,CAAC,cAAc,CAAC,CAAC,gBAAgB,CACjC,eAAe,EAAE,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,SAAS,CAAC,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;QACnE,CAAC;QAED,oBAAoB;YAClB,KAAK,CAAC,oBAAoB,EAAE,CAAC;YAE7B,IAAI,CAAC,cAAc,CAAC,CAAC,mBAAmB,CACpC,eAAe,EAAE,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,SAAS,CAAC,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;QACtE,CAAC;QAED,OAAO,CAAC,iBAAmC;YACzC,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;YAEjC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YACjC,MAAM,KAAK,GAAI,IAAY,CAAC,MAAM,CAAC,CAAC;YAEpC,IAAI,iBAAiB,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE;gBAC3C,IAAI,IAAI,CAAC,cAAc,EAAE;oBACvB,QAAQ,CAAC,iBAAiB,EAAE,CAAC;oBAE7B,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBAC5D,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;oBAE1D,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC;iBAC5B;qBAAM;oBACL,KAAK,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBAC/D,KAAK,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;oBAE7D,QAAQ,CAAC,kBAAkB,EAAE,CAAC;iBAC/B;aACF;YAED,IAAI,iBAAiB,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE;gBACxC,IAAI,eAAe,GAAG,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAE7D,IAAI,eAAe,IAAI,IAAI,EAAE;oBAC3B,eAAe,GAAG,oBAAoB,CAAC,oBAAoB,CAAE,CAAC;iBAC/D;gBAED,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,eAAe,CAAC;gBAE3C,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;oBAC9B,QAAQ,MAAM,EAAE;wBACd,QAAQ;wBACR,KAAK,MAAM;4BACT,MAAM,GAAG,KAAK,CAAC,mBAAmB,CAAC;4BACnC,MAAM;qBACT;iBACF;qBAAM;oBACL,+DAA+D;oBAC/D,+DAA+D;oBAC/D,4CAA4C;oBAC5C,MAAM,IAAI,aAAa,CAAC;iBACzB;gBAED,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,MAAgB,CAAC,CAAC;aACjD;QACH,CAAC;QAED,OA5GU,SAAS,OACT,iBAAiB,OACjB,oBAAoB,OACpB,2BAA2B,OAI3B,cAAc,OAEd,cAAc,OACd,aAAa,OACb,YAAY,OAEZ,2BAA2B,EA+FpC,KAAK,EAAC,CAAC,IAAY,EAAE,KAAa;YACjC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAE1B,IAAI,IAAI,CAAC,oBAAoB,CAAC,EAAE;gBAC9B,IAAI,IAAI,CAAC,MAAM,EAAE;oBACf,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC;iBAC1B;gBAED,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,0BAA0B,EAAE;oBACpD,IAAY,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,YAAY,CACrC,YAAY,EAAE,kBAAkB,CAAC,CAAC;oBAEtC,2DAA2D;oBAC3D,8DAA8D;oBAC9D,gEAAgE;oBAChE,kEAAkE;oBAClE,sDAAsD;oBACtD,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC;oBAC/B,IAAI,CAAC,oBAAoB,CAAC,GAAG,KAAK,CAAC;oBAEnC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;iBAC/C;aACF;YAED,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACtC,CAAC;QAED,CAAC,uBAAuB,CAAC;YACvB,6DAA6D;YAC7D,IAAI,CAAC,oBAAoB,CAAC,GAAG,KAAK,CAAC;YACnC,IAAI,CAAC,cAAc,CAAE,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAElD,oEAAoE;YACpE,gEAAgE;YAChE,gEAAgE;YAChE,0DAA0D;YAC1D,IAAI,IAAI,CAAC,iBAAiB,CAAC,EAAE;gBAC3B,IAAI,CAAC,2BAA2B,CAAC,GAAG,KAAK,CAAC;aAC3C;QACH,CAAC;QAED;;;WAGG;QACH,CAAC,kBAAkB,CAAC;YAClB,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YACjC,MAAM,KAAK,GAAI,IAAY,CAAC,MAAM,CAAC,CAAC;YAEpC,6DAA6D;YAC7D,wCAAwC;YACxC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,CAAC;YACpD,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC;YAC5C,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,sBAAsB,EAAE,CAAC;YAEhC,4DAA4D;YAC5D,kEAAkE;YAClE,MAAM,aAAa,GAAG,uBAAuB,GAAG,aAAa,GAAG,GAAG,CAAC;YACpE,MAAM,aAAa,GAAG,KAAK,CAAC,mBAAmB,CAAC;YAEhD,QAAQ,CAAC,YAAY,CAAC,EAAC,aAAa,EAAE,aAAa,EAAC,CAAC,CAAC;YAEtD,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,aAAa,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC;QAED,CAAC,WAAW,CAAC;YACX,+DAA+D;YAC/D,iEAAiE;YACjE,8DAA8D;YAC9D,+DAA+D;YAC/D,mBAAmB;YACnB,MAAM,EAAC,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,OAAO,EAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;YAC9D,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,GACd,IAAI,CAAC,SAAS,CAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YAE9D,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAkC,CAAC;YAEpE,qEAAqE;YACrE,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,aAAa,KAAK,IAAI,EAAE;gBACvD,MAAM,qBAAqB,GACvB,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,OAAO,CAAC,CAAC;oBAC5D,CAAC,CAAC;gBACN,MAAM,iBAAiB,GACnB,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;gBAEjE,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC;gBACvD,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC;gBAE/C,IAAI,iBAAiB,KAAK,qBAAqB;oBAC3C,WAAW,KAAK,eAAe,EAAE;oBACnC,MAAM,EAAC,MAAM,EAAC,GAAI,IAAY,CAAC,MAAM,CAAC,CAAC;oBACvC,MAAM,sBAAsB,GACxB,yBAAyB,CAAC,iBAAiB,CAAC,CAAC;oBACjD,MAAM,gBAAgB,GAAG,mBAAmB,CAAC,WAAW,CAAC,CAAC;oBAE1D,MAAM,SAAS,GAAG,mBAAmB,gBAAgB,GACjD,sBAAsB,EAAE,CAAC;oBAE7B,MAAM,CAAC,YAAY,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;iBAC9C;aACF;QACH,CAAC;QAED,CAAC,sBAAsB,CAAC;YACtB,MAAM,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAEtD,IAAI,GAAG,IAAI,IAAI,EAAE;gBACf,OAAO;aACR;YAED,mEAAmE;YACnE,iEAAiE;YACjE,0DAA0D;YAC1D,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;gBACtD,GAAG,CAAC,iBAAiB,EAAE,CAAC;aACzB;iBAAM;gBACL,GAAG,CAAC,eAAe,EAAE,CAAC;aACvB;QACH,CAAC;QAED,CAAC,SAAS,CAAC,CAAC,KAAU;YACpB,KAAK,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC;QAC7B,CAAC;QAED,CAAC,YAAY,CAAC,CAAC,KAAU;YACvB,KAAK,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC;YAC3B,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC;QAC7B,CAAC;QAED,CAAC,QAAQ,CAAC;YACR,MAAM,EAAC,MAAM,EAAC,GAAI,IAAY,CAAC,MAAM,CAAC,CAAC;YAEvC,mEAAmE;YACnE,iEAAiE;YACjE,8DAA8D;YAC9D,qEAAqE;YACrE,oBAAoB;YACpB,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;YAEnC,IAAI,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,SAAS,EAAE;gBACnD,MAAM,CAAC,YAAY,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;aAC9C;YAED,sEAAsE;YACtE,mEAAmE;YACnE,sEAAsE;YACtE,oBAAoB;YACpB,IAAI,IAAI,CAAC,2BAA2B,CAAC,EAAE;gBACrC,IAAI,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAAC;gBAClC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;aACrB;QACH,CAAC;QAED,CAAC,OAAO,CAAC;YACP,IAAI,CAAC,oBAAoB,CAAC,GAAG,KAAK,CAAC;YACnC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACnD,CAAC;QAED,CAAC,SAAS,CAAC;YACT,IAAI,CAAC,uBAAuB,CAAC,EAAE,CAAC;YAChC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;YACpB,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;QACvB,CAAC;KACF;IAjSC;QADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,iBAAiB,EAAC,CAAC;sEACxB;IAIhC;QAFC,QAAQ,CACL,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,cAAc,EAAE,UAAU,EAAE,GAAG,EAAE,CAAC,IAAI,EAAC,CAAC;mEAC3B;IAG3C;QADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,8BAA8B,EAAC,CAAC;kFAE3B;IA2R3C,OAAO,0BAA0B,CAAC;AACpC,CAAC,CAAC","sourcesContent":["/*\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {property} from 'lit-element';\nimport {PerspectiveCamera, Spherical} from 'three';\n\nimport {deserializeSpherical} from '../conversions.js';\nimport ModelViewerElementBase, {$ariaLabel, $needsRender, $onModelLoad, $onResize, $scene, $tick} from '../model-viewer-base.js';\nimport {FRAMED_HEIGHT} from '../three-components/ModelScene.js';\nimport {SmoothControls} from '../three-components/SmoothControls.js';\nimport {Constructor} from '../utils.js';\n\nexport interface SphericalPosition {\n  theta: number;\n  phi: number;\n  radius: number;\n}\n\n\nconst DEFAULT_CAMERA_ORBIT = '0deg 75deg auto';\n\nconst HALF_PI = Math.PI / 2.0;\nconst THIRD_PI = Math.PI / 3.0;\nconst QUARTER_PI = HALF_PI / 2.0;\nconst PHI = 2.0 * Math.PI;\n\nconst AZIMUTHAL_QUADRANT_LABELS = ['front', 'right', 'back', 'left'];\nconst POLAR_TRIENT_LABELS = ['upper-', '', 'lower-'];\n\nconst ORBIT_CAMERA_NEAR_PLANE = FRAMED_HEIGHT / 10.0;\nconst ORBIT_CAMERA_FAR_PLANE = FRAMED_HEIGHT * 10.0;\n\nexport const DEFAULT_INTERACTION_PROMPT_THRESHOLD = 3000;\nexport const INTERACTION_PROMPT =\n    'Use mouse, touch or arrow keys to control the camera!';\n\nexport const $controls = Symbol('controls');\nexport const $promptElement = Symbol('promptElement');\n\nconst $deferInteractionPrompt = Symbol('deferInteractionPrompt');\nconst $updateAria = Symbol('updateAria');\nconst $updateOrbitCamera = Symbol('updateOrbitCamera');\nconst $orbitCamera = Symbol('orbitCamera');\nconst $defaultCamera = Symbol('defaultCamera');\n\nconst $blurHandler = Symbol('blurHandler');\nconst $focusHandler = Symbol('focusHandler');\nconst $changeHandler = Symbol('changeHandler');\nconst $promptTransitionendHandler = Symbol('promptTransitionendHandler');\n\nconst $onBlur = Symbol('onBlur');\nconst $onFocus = Symbol('onFocus');\nconst $onChange = Symbol('onChange');\nconst $onPromptTransitionend = Symbol('onPromptTransitionend');\n\nconst $shouldPromptUserToInteract = Symbol('shouldPromptUserToInteract');\nconst $waitingToPromptUser = Symbol('waitingToPromptUser');\nconst $userPromptedOnce = Symbol('userPromptedOnce');\nconst $idleTime = Symbol('idleTime');\n\nconst $lastSpherical = Symbol('lastSpherical');\n\nexport const ControlsMixin = (ModelViewerElement:\n                                  Constructor<ModelViewerElementBase>):\n    Constructor<ModelViewerElementBase> => {\n      class ControlsModelViewerElement extends ModelViewerElement {\n        @property({type: Boolean, attribute: 'camera-controls'})\n        cameraControls: boolean = false;\n\n        @property(\n            {type: String, attribute: 'camera-orbit', hasChanged: () => true})\n        cameraOrbit: string = DEFAULT_CAMERA_ORBIT;\n\n        @property({type: Number, attribute: 'interaction-prompt-threshold'})\n        interactionPromptThreshold: number =\n            DEFAULT_INTERACTION_PROMPT_THRESHOLD;\n\n        protected[$promptElement]: Element;\n\n        protected[$defaultCamera]: PerspectiveCamera;\n        protected[$orbitCamera]: PerspectiveCamera;\n\n        protected[$idleTime]: number = 0;\n        protected[$userPromptedOnce]: boolean = false;\n        protected[$waitingToPromptUser]: boolean = false;\n        protected[$shouldPromptUserToInteract]: boolean = true;\n\n        protected[$controls]: SmoothControls;\n\n        protected[$lastSpherical]: Spherical = new Spherical();\n\n        protected[$changeHandler]: () => void = () => this[$onChange]();\n        protected[$focusHandler]: () => void = () => this[$onFocus]();\n        protected[$blurHandler]: () => void = () => this[$onBlur]();\n\n        protected[$promptTransitionendHandler]:\n            () => void = () => this[$onPromptTransitionend]();\n\n        constructor() {\n          super();\n          const scene = (this as any)[$scene];\n\n          this[$promptElement] =\n              this.shadowRoot!.querySelector('.controls-prompt')!;\n\n          this[$defaultCamera] = scene.getCamera();\n          this[$orbitCamera] = this[$defaultCamera].clone();\n\n          this[$orbitCamera].near = ORBIT_CAMERA_NEAR_PLANE;\n          this[$orbitCamera].far = ORBIT_CAMERA_FAR_PLANE;\n          this[$orbitCamera].updateProjectionMatrix();\n\n          this[$controls] =\n              new SmoothControls(this[$orbitCamera], scene.canvas);\n          this[$controls].target.set(0, FRAMED_HEIGHT / 2, 0);\n\n          scene.setCamera(this[$orbitCamera]);\n        }\n\n        getCameraOrbit(): SphericalPosition {\n          const {theta, phi, radius} = this[$lastSpherical];\n          return {theta, phi, radius: radius / FRAMED_HEIGHT};\n        }\n\n        connectedCallback() {\n          super.connectedCallback();\n\n          this[$promptTransitionendHandler]();\n          this[$promptElement].addEventListener(\n              'transitionend', this[$promptTransitionendHandler]);\n          this[$controls].addEventListener('change', this[$changeHandler]);\n        }\n\n        disconnectedCallback() {\n          super.disconnectedCallback();\n\n          this[$promptElement].removeEventListener(\n              'transitionend', this[$promptTransitionendHandler]);\n          this[$controls].removeEventListener('change', this[$changeHandler]);\n        }\n\n        updated(changedProperties: Map<string, any>) {\n          super.updated(changedProperties);\n\n          const controls = this[$controls];\n          const scene = (this as any)[$scene];\n\n          if (changedProperties.has('cameraControls')) {\n            if (this.cameraControls) {\n              controls.enableInteraction();\n\n              scene.canvas.addEventListener('focus', this[$focusHandler]);\n              scene.canvas.addEventListener('blur', this[$blurHandler]);\n\n              this[$updateOrbitCamera]();\n            } else {\n              scene.canvas.removeEventListener('focus', this[$focusHandler]);\n              scene.canvas.removeEventListener('blur', this[$blurHandler]);\n\n              controls.disableInteraction();\n            }\n          }\n\n          if (changedProperties.has('cameraOrbit')) {\n            let sphericalValues = deserializeSpherical(this.cameraOrbit);\n\n            if (sphericalValues == null) {\n              sphericalValues = deserializeSpherical(DEFAULT_CAMERA_ORBIT)!;\n            }\n\n            let [theta, phi, radius] = sphericalValues;\n\n            if (typeof radius === 'string') {\n              switch (radius) {\n                default:\n                case 'auto':\n                  radius = scene.idealCameraDistance;\n                  break;\n              }\n            } else {\n              // TODO(#450): We are using FRAMED_HEIGHT as a proxy for 1 unit\n              // distance in world space. In other words, 1 * FRAMED_HEIGHT =\n              // 1m. It's possible that this is not ideal.\n              radius *= FRAMED_HEIGHT;\n            }\n\n            controls.setOrbit(theta, phi, radius as number);\n          }\n        }\n\n        [$tick](time: number, delta: number) {\n          super[$tick](time, delta);\n\n          if (this[$waitingToPromptUser]) {\n            if (this.loaded) {\n              this[$idleTime] += delta;\n            }\n\n            if (this[$idleTime] > this.interactionPromptThreshold) {\n              (this as any)[$scene].canvas.setAttribute(\n                  'aria-label', INTERACTION_PROMPT);\n\n              // NOTE(cdata): After notifying users that the controls are\n              // available, we flag that the user has been prompted at least\n              // once, and then effectively stop the idle timer. If the camera\n              // orbit changes after this point, the user will never be prompted\n              // again for this particular <model-element> instance:\n              this[$userPromptedOnce] = true;\n              this[$waitingToPromptUser] = false;\n\n              this[$promptElement].classList.add('visible');\n            }\n          }\n\n          this[$controls].update(time, delta);\n        }\n\n        [$deferInteractionPrompt]() {\n          // Effectively cancel the timer waiting for user interaction:\n          this[$waitingToPromptUser] = false;\n          this[$promptElement]!.classList.remove('visible');\n\n          // Implicitly there was some reason to defer the prompt. If the user\n          // has been prompted at least once already, we no longer need to\n          // prompt the user, although if they have never been prompted we\n          // should probably prompt them at least once just in case.\n          if (this[$userPromptedOnce]) {\n            this[$shouldPromptUserToInteract] = false;\n          }\n        }\n\n        /**\n         * Copies over the default camera's values in order to frame\n         * the scene correctly.\n         */\n        [$updateOrbitCamera]() {\n          const camera = this[$orbitCamera];\n          const controls = this[$controls];\n          const scene = (this as any)[$scene];\n\n          // The default camera already has positioned itself correctly\n          // to frame the canvas. Copy its values.\n          camera.position.copy(this[$defaultCamera].position);\n          camera.aspect = this[$defaultCamera].aspect;\n          camera.rotation.set(0, 0, 0);\n          camera.updateProjectionMatrix();\n\n          // Zooming out beyond the 'frame' doesn't serve much purpose\n          // and will only end up showing the skysphere if zoomed out enough\n          const minimumRadius = ORBIT_CAMERA_NEAR_PLANE + FRAMED_HEIGHT / 2.0;\n          const maximumRadius = scene.idealCameraDistance;\n\n          controls.applyOptions({minimumRadius, maximumRadius});\n\n          controls.target.set(0, FRAMED_HEIGHT / 2, 0);\n        }\n\n        [$updateAria]() {\n          // NOTE(cdata): It is possible that we might want to record the\n          // last spherical when the label actually changed. Right now, the\n          // side-effect the current implementation is that we will only\n          // announce the first view change that occurs after the element\n          // becomes focused.\n          const {theta: lastTheta, phi: lastPhi} = this[$lastSpherical];\n          const {theta, phi} =\n              this[$controls]!.getCameraSpherical(this[$lastSpherical]);\n\n          const rootNode = this.getRootNode() as Document | ShadowRoot | null;\n\n          // Only change the aria-label if <model-viewer> is currently focused:\n          if (rootNode != null && rootNode.activeElement === this) {\n            const lastAzimuthalQuadrant =\n                (4 + Math.floor(((lastTheta % PHI) + QUARTER_PI) / HALF_PI)) %\n                4;\n            const azimuthalQuadrant =\n                (4 + Math.floor(((theta % PHI) + QUARTER_PI) / HALF_PI)) % 4;\n\n            const lastPolarTrient = Math.floor(lastPhi / THIRD_PI);\n            const polarTrient = Math.floor(phi / THIRD_PI);\n\n            if (azimuthalQuadrant !== lastAzimuthalQuadrant ||\n                polarTrient !== lastPolarTrient) {\n              const {canvas} = (this as any)[$scene];\n              const azimuthalQuadrantLabel =\n                  AZIMUTHAL_QUADRANT_LABELS[azimuthalQuadrant];\n              const polarTrientLabel = POLAR_TRIENT_LABELS[polarTrient];\n\n              const ariaLabel = `View from stage ${polarTrientLabel}${\n                  azimuthalQuadrantLabel}`;\n\n              canvas.setAttribute('aria-label', ariaLabel);\n            }\n          }\n        }\n\n        [$onPromptTransitionend]() {\n          const svg = this[$promptElement].querySelector('svg');\n\n          if (svg == null) {\n            return;\n          }\n\n          // NOTE(cdata): We need to make sure that SVG animations are paused\n          // when the prompt is not visible, otherwise we may a significant\n          // compositing cost even while the prompt is at opacity 0.\n          if (this[$promptElement].classList.contains('visible')) {\n            svg.unpauseAnimations();\n          } else {\n            svg.pauseAnimations();\n          }\n        }\n\n        [$onResize](event: any) {\n          super[$onResize](event);\n          this[$updateOrbitCamera]();\n        }\n\n        [$onModelLoad](event: any) {\n          super[$onModelLoad](event);\n          this[$updateOrbitCamera]();\n        }\n\n        [$onFocus]() {\n          const {canvas} = (this as any)[$scene];\n\n          // NOTE(cdata): On every re-focus, we switch the aria-label back to\n          // the original, non-prompt label if appropriate. If the user has\n          // already interacted, they no longer need to hear the prompt.\n          // Otherwise, they will hear it again after the idle prompt threshold\n          // has been crossed.\n          const ariaLabel = this[$ariaLabel];\n\n          if (canvas.getAttribute('aria-label') !== ariaLabel) {\n            canvas.setAttribute('aria-label', ariaLabel);\n          }\n\n          // NOTE(cdata): When focused, if the user has yet to interact with the\n          // camera controls (that is, we \"should\" prompt the user), we begin\n          // the idle timer and indicate that we are waiting for it to cross the\n          // prompt threshold:\n          if (this[$shouldPromptUserToInteract]) {\n            this[$waitingToPromptUser] = true;\n            this[$idleTime] = 0;\n          }\n        }\n\n        [$onBlur]() {\n          this[$waitingToPromptUser] = false;\n          this[$promptElement].classList.remove('visible');\n        }\n\n        [$onChange]() {\n          this[$deferInteractionPrompt]();\n          this[$updateAria]();\n          this[$needsRender]();\n        }\n      }\n\n      return ControlsModelViewerElement;\n    };\n"]}