{"version":3,"file":"EXRLoader.js","sourceRoot":"","sources":["../../../src/third_party/three/EXRLoader.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @author Richard M. / https://github.com/richardmonette\n *\n * OpenEXR loader which, currently, supports reading 16 bit half data, in either\n * uncompressed or PIZ wavelet compressed form.\n *\n * Referred to the original Industrial Light & Magic OpenEXR implementation and the TinyEXR / Syoyo Fujita\n * implementation, so I have preserved their copyright notices.\n */\n\n// /*\n// Copyright (c) 2014 - 2017, Syoyo Fujita\n// All rights reserved.\n\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//     * Redistributions of source code must retain the above copyright\n//       notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//     * Neither the name of the Syoyo Fujita nor the\n//       names of its contributors may be used to endorse or promote products\n//       derived from this software without specific prior written permission.\n\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n// DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n// */\n\n// // TinyEXR contains some OpenEXR code, which is licensed under ------------\n\n// ///////////////////////////////////////////////////////////////////////////\n// //\n// // Copyright (c) 2002, Industrial Light & Magic, a division of Lucas\n// // Digital Ltd. LLC\n// //\n// // All rights reserved.\n// //\n// // Redistribution and use in source and binary forms, with or without\n// // modification, are permitted provided that the following conditions are\n// // met:\n// // *       Redistributions of source code must retain the above copyright\n// // notice, this list of conditions and the following disclaimer.\n// // *       Redistributions in binary form must reproduce the above\n// // copyright notice, this list of conditions and the following disclaimer\n// // in the documentation and/or other materials provided with the\n// // distribution.\n// // *       Neither the name of Industrial Light & Magic nor the names of\n// // its contributors may be used to endorse or promote products derived\n// // from this software without specific prior written permission.\n// //\n// // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// // \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n// //\n// ///////////////////////////////////////////////////////////////////////////\n\n// // End of OpenEXR license -------------------------------------------------\n\nimport * as ThreeModule from 'three';\n\nconst THREE = {...ThreeModule};\n\nexport const EXRLoader = THREE.EXRLoader = function ( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.EXRLoader.prototype = Object.create( THREE.DataTextureLoader.prototype );\n\nTHREE.EXRLoader.prototype._parser = function ( buffer ) {\n\n\tconst USHORT_RANGE = (1 << 16);\n\tconst BITMAP_SIZE = (USHORT_RANGE >> 3);\n\n\tconst HUF_ENCBITS = 16;  // literal (value) bit length\n\tconst HUF_DECBITS = 14;  // decoding bit size (>= 8)\n\n\tconst HUF_ENCSIZE = (1 << HUF_ENCBITS) + 1;  // encoding table size\n\tconst HUF_DECSIZE = 1 << HUF_DECBITS;        // decoding table size\n\tconst HUF_DECMASK = HUF_DECSIZE - 1;\n\n\tconst SHORT_ZEROCODE_RUN = 59;\n\tconst LONG_ZEROCODE_RUN = 63;\n\tconst SHORTEST_LONG_RUN = 2 + LONG_ZEROCODE_RUN - SHORT_ZEROCODE_RUN;\n\tconst LONGEST_LONG_RUN = 255 + SHORTEST_LONG_RUN;\n\n\tconst BYTES_PER_HALF = 2;\n\n\tconst ULONG_SIZE = 8;\n\tconst FLOAT32_SIZE = 4;\n\tconst INT32_SIZE = 4;\n\tconst INT16_SIZE = 2;\n\tconst INT8_SIZE = 1;\n\n\tfunction reverseLutFromBitmap( bitmap, lut ) {\n\n\t\tvar k = 0;\n\n\t\tfor ( var i = 0; i < USHORT_RANGE; ++ i ) {\n\n\t\t\tif ( ( i == 0 ) || ( bitmap[ i >> 3 ] & ( 1 << ( i & 7 ) ) ) ) {\n\n\t\t\t\tlut[ k ++ ] = i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar n = k - 1;\n\n\t\twhile ( k < USHORT_RANGE ) lut[ k ++ ] = 0;\n\n\t\treturn n;\n\n\t}\n\n\tfunction hufClearDecTable( hdec ) {\n\n\t\tfor ( var i = 0; i < HUF_DECSIZE; i ++ ) {\n\n\t\t\thdec[ i ] = {};\n\t\t\thdec[ i ].len = 0;\n\t\t\thdec[ i ].lit = 0;\n\t\t\thdec[ i ].p = null;\n\n\t\t}\n\n\t}\n\n\tconst getBitsReturn = { l: 0, c: 0, lc: 0 };\n\n\tfunction getBits( nBits, c, lc, uInt8Array, inOffset ) {\n\n\t\twhile ( lc < nBits ) {\n\n\t\t\tc = ( c << 8 ) | parseUint8Array( uInt8Array, inOffset );\n\t\t\tlc += 8;\n\n\t\t}\n\n\t\tlc -= nBits;\n\n\t\tgetBitsReturn.l = ( c >> lc ) & ( ( 1 << nBits ) - 1 );\n\t\tgetBitsReturn.c = c;\n\t\tgetBitsReturn.lc = lc;\n\t}\n\n\tconst hufTableBuffer = new Array( 59 );\n\n\tfunction hufCanonicalCodeTable( hcode ) {\n\n\t\tfor ( var i = 0; i <= 58; ++ i ) hufTableBuffer[ i ] = 0;\n\t\tfor ( var i = 0; i < HUF_ENCSIZE; ++ i ) hufTableBuffer[ hcode[ i ] ] += 1;\n\n\t\tvar c = 0;\n\n\t\tfor ( var i = 58; i > 0; -- i ) {\n\n\t\t\tvar nc = ( ( c + hufTableBuffer[ i ] ) >> 1 );\n\t\t\thufTableBuffer[ i ] = c;\n\t\t\tc = nc;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < HUF_ENCSIZE; ++ i ) {\n\n\t\t\tvar l = hcode[ i ];\n\t\t\tif ( l > 0 ) hcode[ i ] = l | ( hufTableBuffer[ l ] ++ << 6 );\n\n\t\t}\n\n\t}\n\n\tfunction hufUnpackEncTable( uInt8Array, inDataView, inOffset, ni, im, iM, hcode ) {\n\n\t\tvar p = inOffset;\n\t\tvar c = 0;\n\t\tvar lc = 0;\n\n\t\tfor ( ; im <= iM; im ++ ) {\n\n\t\t\tif ( p.value - inOffset.value > ni ) return false;\n\n\t\t\tgetBits( 6, c, lc, uInt8Array, p );\n\n\t\t\tvar l = getBitsReturn.l;\n\t\t\tc = getBitsReturn.c;\n\t\t\tlc = getBitsReturn.lc;\n\n\t\t\thcode[ im ] = l;\n\n\t\t\tif ( l == LONG_ZEROCODE_RUN ) {\n\n\t\t\t\tif ( p.value - inOffset.value > ni ) {\n\n\t\t\t\t\tthrow 'Something wrong with hufUnpackEncTable';\n\n\t\t\t\t}\n\n\t\t\t\tgetBits( 8, c, lc, uInt8Array, p );\n\n\t\t\t\tvar zerun = getBitsReturn.l + SHORTEST_LONG_RUN;\n\t\t\t\tc = getBitsReturn.c;\n\t\t\t\tlc = getBitsReturn.lc;\n\n\t\t\t\tif ( im + zerun > iM + 1 ) {\n\n\t\t\t\t\tthrow 'Something wrong with hufUnpackEncTable';\n\n\t\t\t\t}\n\n\t\t\t\twhile ( zerun -- ) hcode[ im ++ ] = 0;\n\n\t\t\t\tim --;\n\n\t\t\t} else if ( l >= SHORT_ZEROCODE_RUN ) {\n\n\t\t\t\tvar zerun = l - SHORT_ZEROCODE_RUN + 2;\n\n\t\t\t\tif ( im + zerun > iM + 1 ) {\n\n\t\t\t\t\tthrow 'Something wrong with hufUnpackEncTable';\n\n\t\t\t\t}\n\n\t\t\t\twhile ( zerun -- ) hcode[ im ++ ] = 0;\n\n\t\t\t\tim --;\n\n\t\t\t}\n\n\t\t}\n\n\t\thufCanonicalCodeTable( hcode );\n\n\t}\n\n\tfunction hufLength( code ) { return code & 63; }\n\n\tfunction hufCode( code ) { return code >> 6; }\n\n\tfunction hufBuildDecTable( hcode, im, iM, hdecod ) {\n\n\t\tfor ( ; im <= iM; im ++ ) {\n\n\t\t\tvar c = hufCode( hcode[ im ] );\n\t\t\tvar l = hufLength( hcode[ im ] );\n\n\t\t\tif ( c >> l ) {\n\n\t\t\t\tthrow 'Invalid table entry';\n\n\t\t\t}\n\n\t\t\tif ( l > HUF_DECBITS ) {\n\n\t\t\t\tvar pl = hdecod[ ( c >> ( l - HUF_DECBITS ) ) ];\n\n\t\t\t\tif ( pl.len ) {\n\n\t\t\t\t\tthrow 'Invalid table entry';\n\n\t\t\t\t}\n\n\t\t\t\tpl.lit ++;\n\n\t\t\t\tif ( pl.p ) {\n\n\t\t\t\t\tvar p = pl.p;\n\t\t\t\t\tpl.p = new Array( pl.lit );\n\n\t\t\t\t\tfor ( var i = 0; i < pl.lit - 1; ++ i ) {\n\n\t\t\t\t\t\tpl.p[ i ] = p[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpl.p = new Array( 1 );\n\n\t\t\t\t}\n\n\t\t\t\tpl.p[ pl.lit - 1 ] = im;\n\n\t\t\t} else if ( l ) {\n\n\t\t\t\tvar plOffset = 0;\n\n\t\t\t\tfor ( var i = 1 << ( HUF_DECBITS - l ); i > 0; i -- ) {\n\n\t\t\t\t\tvar pl = hdecod[ ( c << ( HUF_DECBITS - l ) ) + plOffset ];\n\n\t\t\t\t\tif ( pl.len || pl.p ) {\n\n\t\t\t\t\t\tthrow 'Invalid table entry';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tpl.len = l;\n\t\t\t\t\tpl.lit = im;\n\n\t\t\t\t\tplOffset ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tconst getCharReturn = { c: 0, lc: 0 };\n\n\tfunction getChar( c, lc, uInt8Array, inOffset ) {\n\n\t\tc = ( c << 8 ) | parseUint8Array( uInt8Array, inOffset );\n\t\tlc += 8;\n\n\t\tgetCharReturn.c = c;\n\t\tgetCharReturn.lc = lc;\n\n\t}\n\n\tconst getCodeReturn = { c: 0, lc: 0 };\n\n\tfunction getCode( po, rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outBufferOffset, outBufferEndOffset ) {\n\n\t\tif ( po == rlc ) {\n\n\t\t\tif ( lc < 8 ) {\n\n\t\t\t\tgetChar( c, lc, uInt8Array, inOffset );\n\t\t\t\tc = getCharReturn.c;\n\t\t\t\tlc = getCharReturn.lc;\n\n\t\t\t}\n\n\t\t\tlc -= 8;\n\n\t\t\tvar cs = ( c >> lc );\n\t\t\tvar cs = new Uint8Array([cs])[0];\n\n\t\t\tif ( outBufferOffset.value + cs > outBufferEndOffset ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\tvar s = outBuffer[ outBufferOffset.value - 1 ];\n\n\t\t\twhile ( cs-- > 0 ) {\n\n\t\t\t\toutBuffer[ outBufferOffset.value ++ ] = s;\n\n\t\t\t}\n\n\t\t} else if ( outBufferOffset.value < outBufferEndOffset ) {\n\n\t\t\toutBuffer[ outBufferOffset.value ++ ] = po;\n\n\t\t} else {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tgetCodeReturn.c = c;\n\t\tgetCodeReturn.lc = lc;\n\n\t}\n\n\tvar NBITS = 16;\n\tvar A_OFFSET = 1 << ( NBITS - 1 );\n\tvar M_OFFSET = 1 << ( NBITS - 1 );\n\tvar MOD_MASK = ( 1 << NBITS ) - 1;\n\n\tfunction UInt16( value ) {\n\n\t\treturn ( value & 0xFFFF );\n\n\t}\n\n\tfunction Int16( value ) {\n\n\t\tvar ref = UInt16( value );\n\t\treturn ( ref > 0x7FFF ) ? ref - 0x10000 : ref;\n\n\t}\n\n\tconst wdec14Return = { a: 0, b: 0 };\n\n\tfunction wdec14( l, h ) {\n\n\t\tvar ls = Int16( l );\n\t\tvar hs = Int16( h );\n\n\t\tvar hi = hs;\n\t\tvar ai = ls + ( hi & 1 ) + ( hi >> 1 );\n\n\t\tvar as = ai;\n\t\tvar bs = ai - hi;\n\n\t\twdec14Return.a = as;\n\t\twdec14Return.b = bs;\n\n\t}\n\n\tfunction wav2Decode( j, buffer, nx, ox, ny, oy, mx ) {\n\n\t\tvar n = ( nx > ny ) ? ny : nx;\n\t\tvar p = 1;\n\t\tvar p2;\n\n\t\twhile ( p <= n ) p <<= 1;\n\n\t\tp >>= 1;\n\t\tp2 = p;\n\t\tp >>= 1;\n\n\t\twhile ( p >= 1 ) {\n\n\t\t\tvar py = 0;\n\t\t\tvar ey = py + oy * ( ny - p2 );\n\t\t\tvar oy1 = oy * p;\n\t\t\tvar oy2 = oy * p2;\n\t\t\tvar ox1 = ox * p;\n\t\t\tvar ox2 = ox * p2;\n\t\t\tvar i00, i01, i10, i11;\n\n\t\t\tfor ( ; py <= ey; py += oy2 ) {\n\n\t\t\t\tvar px = py;\n\t\t\t\tvar ex = py + ox * ( nx - p2 );\n\n\t\t\t\tfor ( ; px <= ex; px += ox2 ) {\n\n\t\t\t\t\tvar p01 = px + ox1;\n\t\t\t\t\tvar p10 = px + oy1;\n\t\t\t\t\tvar p11 = p10 + ox1;\n\n\t\t\t\t\twdec14( buffer[ px + j ], buffer[ p10 + j ] );\n\n\t\t\t\t\ti00 = wdec14Return.a;\n\t\t\t\t\ti10 = wdec14Return.b;\n\n\t\t\t\t\twdec14( buffer[ p01 + j ], buffer[ p11 + j ] );\n\n\t\t\t\t\ti01 = wdec14Return.a;\n\t\t\t\t\ti11 = wdec14Return.b;\n\n\t\t\t\t\twdec14( i00, i01 );\n\n\t\t\t\t\tbuffer[ px + j ] = wdec14Return.a;\n\t\t\t\t\tbuffer[ p01 + j ] = wdec14Return.b;\n\n\t\t\t\t\twdec14( i10, i11 );\n\n\t\t\t\t\tbuffer[ p10 + j ] = wdec14Return.a;\n\t\t\t\t\tbuffer[ p11 + j ] = wdec14Return.b;\n\n\t\t\t\t}\n\n\t\t\t\tif ( nx & p ) {\n\n\t\t\t\t\tvar p10 = px + oy1;\n\n\t\t\t\t\twdec14( buffer[ px + j ], buffer[ p10 + j ] );\n\n\t\t\t\t\ti00 = wdec14Return.a;\n\t\t\t\t\tbuffer[ p10 + j ] = wdec14Return.b;\n\n\t\t\t\t\tbuffer[ px + j ] = i00;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ny & p ) {\n\n\t\t\t\tvar px = py;\n\t\t\t\tvar ex = py + ox * ( nx - p2 );\n\n\t\t\t\tfor ( ; px <= ex; px += ox2 ) {\n\n\t\t\t\t\tvar p01 = px + ox1;\n\n\t\t\t\t\twdec14( buffer[ px + j ], buffer[ p01 + j ] );\n\n\t\t\t\t\ti00 = wdec14Return.a;\n\t\t\t\t\tbuffer[ p01 + j ] = wdec14Return.b;\n\n\t\t\t\t\tbuffer[ px + j ] = i00;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tp2 = p;\n\t\t\tp >>= 1;\n\n\t\t}\n\n\t\treturn py;\n\n\t}\n\n\tfunction hufDecode( encodingTable, decodingTable, uInt8Array, inDataView, inOffset, ni, rlc, no, outBuffer, outOffset ) {\n\n\t\tvar c = 0;\n\t\tvar lc = 0;\n\t\tvar outBufferEndOffset = no;\n\t\tvar inOffsetEnd = Math.trunc( inOffset.value + ( ni + 7 ) / 8 );\n\n\t\twhile ( inOffset.value < inOffsetEnd ) {\n\n\t\t\tgetChar( c, lc, uInt8Array, inOffset );\n\n\t\t\tc = getCharReturn.c;\n\t\t\tlc = getCharReturn.lc;\n\n\t\t\twhile ( lc >= HUF_DECBITS ) {\n\n\t\t\t\tvar index = ( c >> ( lc - HUF_DECBITS ) ) & HUF_DECMASK;\n\t\t\t\tvar pl = decodingTable[ index ];\n\n\t\t\t\tif ( pl.len ) {\n\n\t\t\t\t\tlc -= pl.len;\n\n\t\t\t\t\tgetCode( pl.lit, rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outOffset, outBufferEndOffset );\n\n\t\t\t\t\tc = getCodeReturn.c;\n\t\t\t\t\tlc = getCodeReturn.lc;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! pl.p ) {\n\n\t\t\t\t\t\tthrow 'hufDecode issues';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tfor ( j = 0; j < pl.lit; j ++ ) {\n\n\t\t\t\t\t\tvar l = hufLength( encodingTable[ pl.p[ j ] ] );\n\n\t\t\t\t\t\twhile ( lc < l && inOffset.value < inOffsetEnd ) {\n\n\t\t\t\t\t\t\tgetChar( c, lc, uInt8Array, inOffset );\n\n\t\t\t\t\t\t\tc = getCharReturn.c;\n\t\t\t\t\t\t\tlc = getCharReturn.lc;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( lc >= l ) {\n\n\t\t\t\t\t\t\tif ( hufCode( encodingTable[ pl.p[ j ] ] ) == ( ( c >> ( lc - l ) ) & ( ( 1 << l ) - 1 ) ) ) {\n\n\t\t\t\t\t\t\t\tlc -= l;\n\n\t\t\t\t\t\t\t\tgetCode( pl.p[ j ], rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outOffset, outBufferEndOffset );\n\n\t\t\t\t\t\t\t\tc = getCodeReturn.c;\n\t\t\t\t\t\t\t\tlc = getCodeReturn.lc;\n\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( j == pl.lit ) {\n\n\t\t\t\t\t\tthrow 'hufDecode issues';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar i = ( 8 - ni ) & 7;\n\n\t\tc >>= i;\n\t\tlc -= i;\n\n\t\twhile ( lc > 0 ) {\n\n\t\t\tvar pl = decodingTable[ ( c << ( HUF_DECBITS - lc ) ) & HUF_DECMASK ];\n\n\t\t\tif ( pl.len ) {\n\n\t\t\t\tlc -= pl.len;\n\n\t\t\t\tgetCode( pl.lit, rlc, c, lc, uInt8Array, inDataView, inOffset, outBuffer, outOffset, outBufferEndOffset );\n\n\t\t\t\tc = getCodeReturn.c;\n\t\t\t\tlc = getCodeReturn.lc;\n\n\t\t\t} else {\n\n\t\t\t\tthrow 'hufDecode issues';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction hufUncompress( uInt8Array, inDataView, inOffset, nCompressed, outBuffer, outOffset, nRaw ) {\n\n\t\tvar initialInOffset = inOffset.value;\n\n\t\tvar im = parseUint32( inDataView, inOffset );\n\t\tvar iM = parseUint32( inDataView, inOffset );\n\n\t\tinOffset.value += 4;\n\n\t\tvar nBits = parseUint32( inDataView, inOffset );\n\n\t\tinOffset.value += 4;\n\n\t\tif ( im < 0 || im >= HUF_ENCSIZE || iM < 0 || iM >= HUF_ENCSIZE ) {\n\n\t\t\tthrow 'Something wrong with HUF_ENCSIZE';\n\n\t\t}\n\n\t\tvar freq = new Array( HUF_ENCSIZE );\n\t\tvar hdec = new Array( HUF_DECSIZE );\n\n\t\thufClearDecTable( hdec );\n\n\t\tvar ni = nCompressed - ( inOffset.value - initialInOffset );\n\n\t\thufUnpackEncTable( uInt8Array, inDataView, inOffset, ni, im, iM, freq );\n\n\t\tif ( nBits > 8 * ( nCompressed - ( inOffset.value - initialInOffset ) ) ) {\n\n\t\t\tthrow 'Something wrong with hufUncompress';\n\n\t\t}\n\n\t\thufBuildDecTable( freq, im, iM, hdec );\n\n\t\thufDecode( freq, hdec, uInt8Array, inDataView, inOffset, nBits, iM, nRaw, outBuffer, outOffset );\n\n\t}\n\n\tfunction applyLut( lut, data, nData ) {\n\n\t\tfor ( var i = 0; i < nData; ++ i ) {\n\n\t\t\tdata[ i ] = lut[ data[ i ] ];\n\n\t\t}\n\n\t}\n\n\tfunction decompressPIZ( outBuffer, outOffset, uInt8Array, inDataView, inOffset, tmpBufSize, num_channels, exrChannelInfos, dataWidth, num_lines ) {\n\n\t\tvar bitmap = new Uint8Array( BITMAP_SIZE );\n\n\t\tvar minNonZero = parseUint16( inDataView, inOffset );\n\t\tvar maxNonZero = parseUint16( inDataView, inOffset );\n\n\t\tif ( maxNonZero >= BITMAP_SIZE ) {\n\n\t\t\tthrow 'Something is wrong with PIZ_COMPRESSION BITMAP_SIZE';\n\n\t\t}\n\n\t\tif ( minNonZero <= maxNonZero ) {\n\n\t\t\tfor ( var i = 0; i < maxNonZero - minNonZero + 1; i ++ ) {\n\n\t\t\t\tbitmap[ i + minNonZero ] = parseUint8( inDataView, inOffset );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar lut = new Uint16Array( USHORT_RANGE );\n\t\tvar maxValue = reverseLutFromBitmap( bitmap, lut );\n\n\t\tvar length = parseUint32( inDataView, inOffset );\n\n\t\thufUncompress( uInt8Array, inDataView, inOffset, length, outBuffer, outOffset, tmpBufSize );\n\n\t\tvar pizChannelData = new Array( num_channels );\n\n\t\tvar outBufferEnd = 0;\n\n\t\tfor ( var i = 0; i < num_channels; i ++ ) {\n\n\t\t\tvar exrChannelInfo = exrChannelInfos[ i ];\n\n\t\t\tvar pixelSize = 2; // assumes HALF_FLOAT\n\n\t\t\tpizChannelData[ i ] = {};\n\t\t\tpizChannelData[ i ][ 'start' ] = outBufferEnd;\n\t\t\tpizChannelData[ i ][ 'end' ] = pizChannelData[ i ][ 'start' ];\n\t\t\tpizChannelData[ i ][ 'nx' ] = dataWidth;\n\t\t\tpizChannelData[ i ][ 'ny' ] = num_lines;\n\t\t\tpizChannelData[ i ][ 'size' ] = 1;\n\n\t\t\toutBufferEnd += pizChannelData[ i ].nx * pizChannelData[ i ].ny * pizChannelData[ i ].size;\n\n\t\t}\n\n\t\tvar fooOffset = 0;\n\n\t\tfor ( var i = 0; i < num_channels; i ++ ) {\n\n\t\t\tfor ( var j = 0; j < pizChannelData[ i ].size; ++ j ) {\n\n\t\t\t\tfooOffset += wav2Decode(\n\t\t\t\t\tj + fooOffset,\n\t\t\t\t\toutBuffer,\n\t\t\t\t\tpizChannelData[ i ].nx,\n\t\t\t\t\tpizChannelData[ i ].size,\n\t\t\t\t\tpizChannelData[ i ].ny,\n\t\t\t\t\tpizChannelData[ i ].nx * pizChannelData[ i ].size,\n\t\t\t\t\tmaxValue\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tapplyLut( lut, outBuffer, outBufferEnd );\n\n\t\treturn true;\n\n\t}\n\n\tfunction parseNullTerminatedString( buffer, offset ) {\n\n\t\tvar uintBuffer = new Uint8Array( buffer );\n\t\tvar endOffset = 0;\n\n\t\twhile ( uintBuffer[ offset.value + endOffset ] != 0 ) {\n\n\t\t\tendOffset += 1;\n\n\t\t}\n\n\t\tvar stringValue = new TextDecoder().decode(\n\t\t\tuintBuffer.slice( offset.value, offset.value + endOffset )\n\t\t);\n\n\t\toffset.value = offset.value + endOffset + 1;\n\n\t\treturn stringValue;\n\n\t}\n\n\tfunction parseFixedLengthString( buffer, offset, size ) {\n\n\t\tvar stringValue = new TextDecoder().decode(\n\t\t\tnew Uint8Array( buffer ).slice( offset.value, offset.value + size )\n\t\t);\n\n\t\toffset.value = offset.value + size;\n\n\t\treturn stringValue;\n\n\t}\n\n\tfunction parseUlong( dataView, offset ) {\n\n\t\tvar uLong = dataView.getUint32( 0, true );\n\n\t\toffset.value = offset.value + ULONG_SIZE;\n\n\t\treturn uLong;\n\n\t}\n\n\tfunction parseUint32( dataView, offset ) {\n\n\t\tvar Uint32 = dataView.getUint32(offset.value, true);\n\n\t\toffset.value = offset.value + INT32_SIZE;\n\n\t\treturn Uint32;\n\n\t}\n\n\tfunction parseUint8Array( uInt8Array, offset ) {\n\n\t\tvar Uint8 = uInt8Array[offset.value];\n\n\t\toffset.value = offset.value + INT8_SIZE;\n\n\t\treturn Uint8;\n\n\t}\n\n\tfunction parseUint8( dataView, offset ) {\n\n\t\tvar Uint8 = dataView.getUint8(offset.value);\n\n\t\toffset.value = offset.value + INT8_SIZE;\n\n\t\treturn Uint8;\n\n\t}\n\n\tfunction parseFloat32( dataView, offset ) {\n\n\t\tvar float = dataView.getFloat32(offset.value, true);\n\n\t\toffset.value += FLOAT32_SIZE;\n\n\t\treturn float;\n\n\t}\n\n\t// https://stackoverflow.com/questions/5678432/decompressing-half-precision-floats-in-javascript\n\tfunction decodeFloat16( binary ) {\n\n\t\tvar exponent = ( binary & 0x7C00 ) >> 10,\n\t\t\tfraction = binary & 0x03FF;\n\n\t\treturn ( binary >> 15 ? - 1 : 1 ) * (\n\t\t\texponent ?\n\t\t\t\t(\n\t\t\t\t\texponent === 0x1F ?\n\t\t\t\t\t\tfraction ? NaN : Infinity :\n\t\t\t\t\t\tMath.pow( 2, exponent - 15 ) * ( 1 + fraction / 0x400 )\n\t\t\t\t) :\n\t\t\t\t6.103515625e-5 * ( fraction / 0x400 )\n\t\t);\n\n\t}\n\n\tfunction parseUint16( dataView, offset ) {\n\n\t\tvar Uint16 = dataView.getUint16( offset.value, true );\n\n\t\toffset.value += INT16_SIZE;\n\n\t\treturn Uint16;\n\n\t}\n\n\tfunction parseFloat16( buffer, offset ) {\n\n\t\treturn decodeFloat16( parseUint16( buffer, offset) );\n\n\t}\n\n\tfunction parseChlist( dataView, buffer, offset, size ) {\n\n\t\tvar startOffset = offset.value;\n\t\tvar channels = [];\n\n\t\twhile ( offset.value < ( startOffset + size - 1 ) ) {\n\n\t\t\tvar name = parseNullTerminatedString( buffer, offset );\n\t\t\tvar pixelType = parseUint32( dataView, offset ); // TODO: Cast this to UINT, HALF or FLOAT\n\t\t\tvar pLinear = parseUint8( dataView, offset );\n\t\t\toffset.value += 3; // reserved, three chars\n\t\t\tvar xSampling = parseUint32( dataView, offset );\n\t\t\tvar ySampling = parseUint32( dataView, offset );\n\n\t\t\tchannels.push( {\n\t\t\t\tname: name,\n\t\t\t\tpixelType: pixelType,\n\t\t\t\tpLinear: pLinear,\n\t\t\t\txSampling: xSampling,\n\t\t\t\tySampling: ySampling\n\t\t\t} );\n\n\t\t}\n\n\t\toffset.value += 1;\n\n\t\treturn channels;\n\n\t}\n\n\tfunction parseChromaticities( dataView, offset ) {\n\n\t\tvar redX = parseFloat32( dataView, offset );\n\t\tvar redY = parseFloat32( dataView, offset );\n\t\tvar greenX = parseFloat32( dataView, offset );\n\t\tvar greenY = parseFloat32( dataView, offset );\n\t\tvar blueX = parseFloat32( dataView, offset );\n\t\tvar blueY = parseFloat32( dataView, offset );\n\t\tvar whiteX = parseFloat32( dataView, offset );\n\t\tvar whiteY = parseFloat32( dataView, offset );\n\n\t\treturn { redX: redX, redY: redY, greenX: greenX, greenY: greenY, blueX: blueX, blueY: blueY, whiteX: whiteX, whiteY: whiteY };\n\n\t}\n\n\tfunction parseCompression( dataView, offset ) {\n\n\t\tvar compressionCodes = [\n\t\t\t'NO_COMPRESSION',\n\t\t\t'RLE_COMPRESSION',\n\t\t\t'ZIPS_COMPRESSION',\n\t\t\t'ZIP_COMPRESSION',\n\t\t\t'PIZ_COMPRESSION',\n\t\t\t'PXR24_COMPRESSION',\n\t\t\t'B44_COMPRESSION',\n\t\t\t'B44A_COMPRESSION',\n\t\t\t'DWAA_COMPRESSION',\n\t\t\t'DWAB_COMPRESSION'\n\t\t];\n\n\t\tvar compression = parseUint8( dataView, offset );\n\n\t\treturn compressionCodes[ compression ];\n\n\t}\n\n\tfunction parseBox2i( dataView, offset ) {\n\n\t\tvar xMin = parseUint32( dataView, offset );\n\t\tvar yMin = parseUint32( dataView, offset );\n\t\tvar xMax = parseUint32( dataView, offset );\n\t\tvar yMax = parseUint32( dataView, offset );\n\n\t\treturn { xMin: xMin, yMin: yMin, xMax: xMax, yMax: yMax };\n\n\t}\n\n\tfunction parseLineOrder( dataView, offset ) {\n\n\t\tvar lineOrders = [\n\t\t\t'INCREASING_Y'\n\t\t];\n\n\t\tvar lineOrder = parseUint8( dataView, offset );\n\n\t\treturn lineOrders[ lineOrder ];\n\n\t}\n\n\tfunction parseV2f( dataView, offset ) {\n\n\t\tvar x = parseFloat32( dataView, offset );\n\t\tvar y = parseFloat32( dataView, offset );\n\n\t\treturn [ x, y ];\n\n\t}\n\n\tfunction parseValue( dataView, buffer, offset, type, size ) {\n\n\t\tif ( type === 'string' || type === 'iccProfile' ) {\n\n\t\t\treturn parseFixedLengthString( buffer, offset, size );\n\n\t\t} else if ( type === 'chlist' ) {\n\n\t\t\treturn parseChlist( dataView, buffer, offset, size );\n\n\t\t} else if ( type === 'chromaticities' ) {\n\n\t\t\treturn parseChromaticities( dataView, offset );\n\n\t\t} else if ( type === 'compression' ) {\n\n\t\t\treturn parseCompression( dataView, offset );\n\n\t\t} else if ( type === 'box2i' ) {\n\n\t\t\treturn parseBox2i( dataView, offset );\n\n\t\t} else if ( type === 'lineOrder' ) {\n\n\t\t\treturn parseLineOrder( dataView, offset );\n\n\t\t} else if ( type === 'float' ) {\n\n\t\t\treturn parseFloat32( dataView, offset );\n\n\t\t} else if ( type === 'v2f' ) {\n\n\t\t\treturn parseV2f( dataView, offset );\n\n\t\t} else if ( type === 'int' ) {\n\n\t\t\treturn parseUint32( dataView, offset );\n\n\t\t} else {\n\n\t\t\tthrow 'Cannot parse value for unsupported type: ' + type;\n\n\t\t}\n\n\t}\n\n\tvar bufferDataView = new DataView(buffer);\n\tvar uInt8Array = new Uint8Array(buffer);\n\n\tvar EXRHeader = {};\n\n\tvar magic = bufferDataView.getUint32( 0, true );\n\tvar versionByteZero = bufferDataView.getUint8( 4, true );\n\tvar fullMask = bufferDataView.getUint8( 5, true );\n\n\t// start of header\n\n\tvar offset = { value: 8 }; // start at 8, after magic stuff\n\n\tvar keepReading = true;\n\n\twhile ( keepReading ) {\n\n\t\tvar attributeName = parseNullTerminatedString( buffer, offset );\n\n\t\tif ( attributeName == 0 ) {\n\n\t\t\tkeepReading = false;\n\n\t\t} else {\n\n\t\t\tvar attributeType = parseNullTerminatedString( buffer, offset );\n\t\t\tvar attributeSize = parseUint32( bufferDataView, offset );\n\t\t\tvar attributeValue = parseValue( bufferDataView, buffer, offset, attributeType, attributeSize );\n\n\t\t\tEXRHeader[ attributeName ] = attributeValue;\n\n\t\t}\n\n\t}\n\n\t// offsets\n\n\tvar dataWindowHeight = EXRHeader.dataWindow.yMax + 1;\n\tvar scanlineBlockSize = 1; // 1 for NO_COMPRESSION\n\n\tif ( EXRHeader.compression === 'PIZ_COMPRESSION' ) {\n\n\t\tscanlineBlockSize = 32;\n\n\t}\n\n\tvar numBlocks = dataWindowHeight / scanlineBlockSize;\n\n\tfor ( var i = 0; i < numBlocks; i ++ ) {\n\n\t\tvar scanlineOffset = parseUlong( bufferDataView, offset );\n\n\t}\n\n\t// we should be passed the scanline offset table, start reading pixel data\n\n\tvar width = EXRHeader.dataWindow.xMax - EXRHeader.dataWindow.xMin + 1;\n\tvar height = EXRHeader.dataWindow.yMax - EXRHeader.dataWindow.yMin + 1;\n\tvar numChannels = EXRHeader.channels.length;\n\n\tvar byteArray = new Float32Array( width * height * numChannels );\n\n\tvar channelOffsets = {\n\t\tR: 0,\n\t\tG: 1,\n\t\tB: 2,\n\t\tA: 3\n\t};\n\n\tif ( EXRHeader.compression === 'NO_COMPRESSION' ) {\n\n\t\tfor ( var y = 0; y < height; y ++ ) {\n\n\t\t\tvar y_scanline = parseUint32( bufferDataView, offset );\n\t\t\tvar dataSize = parseUint32( bufferDataView, offset );\n\n\t\t\tfor ( var channelID = 0; channelID < EXRHeader.channels.length; channelID ++ ) {\n\n\t\t\t\tvar cOff = channelOffsets[ EXRHeader.channels[ channelID ].name ];\n\n\t\t\t\tif ( EXRHeader.channels[ channelID ].pixelType === 1 ) {\n\n\t\t\t\t\t// HALF\n\t\t\t\t\tfor ( var x = 0; x < width; x ++ ) {\n\n\t\t\t\t\t\tvar val = parseFloat16( bufferDataView, offset );\n\n\t\t\t\t\t\tbyteArray[ ( ( ( height - y_scanline ) * ( width * numChannels ) ) + ( x * numChannels ) ) + cOff ] = val;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow 'EXRLoader._parser: unsupported pixelType ' + EXRHeader.channels[ channelID ].pixelType + '. Only pixelType is 1 (HALF) is supported.';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} else if ( EXRHeader.compression === 'PIZ_COMPRESSION' ) {\n\n\t\tfor ( var scanlineBlockIdx = 0; scanlineBlockIdx < height / scanlineBlockSize; scanlineBlockIdx ++ ) {\n\n\t\t\tvar line_no = parseUint32( bufferDataView, offset );\n\t\t\tvar data_len = parseUint32( bufferDataView, offset );\n\n\t\t\tvar tmpBufferSize = width * scanlineBlockSize * ( EXRHeader.channels.length * BYTES_PER_HALF );\n\t\t\tvar tmpBuffer = new Uint16Array( tmpBufferSize );\n\t\t\tvar tmpOffset = { value: 0 };\n\n\t\t\tdecompressPIZ( tmpBuffer, tmpOffset, uInt8Array, bufferDataView, offset, tmpBufferSize, numChannels, EXRHeader.channels, width, scanlineBlockSize );\n\n\t\t\tfor ( var line_y = 0; line_y < scanlineBlockSize; line_y ++ ) {\n\n\t\t\t\tfor ( var channelID = 0; channelID < EXRHeader.channels.length; channelID ++ ) {\n\n\t\t\t\t\tvar cOff = channelOffsets[ EXRHeader.channels[ channelID ].name ];\n\n\t\t\t\t\tif ( EXRHeader.channels[ channelID ].pixelType === 1 ) {\n\n\t\t\t\t\t\t// HALF\n\t\t\t\t\t\tfor ( var x = 0; x < width; x ++ ) {\n\n\t\t\t\t\t\t\tvar val = decodeFloat16( tmpBuffer[ ( channelID * ( scanlineBlockSize * width ) ) + ( line_y * width ) + x ] );\n\n\t\t\t\t\t\t\tvar true_y = line_y + ( scanlineBlockIdx * scanlineBlockSize );\n\n\t\t\t\t\t\t\tbyteArray[ ( ( ( height - true_y ) * ( width * numChannels ) ) + ( x * numChannels ) ) + cOff ] = val;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow 'EXRLoader._parser: unsupported pixelType ' + EXRHeader.channels[ channelID ].pixelType + '. Only pixelType is 1 (HALF) is supported.';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\tthrow 'EXRLoader._parser: ' + EXRHeader.compression + ' is unsupported';\n\n\t}\n\n\treturn {\n\t\theader: EXRHeader,\n\t\twidth: width,\n\t\theight: height,\n\t\tdata: byteArray,\n\t\tformat: EXRHeader.channels.length == 4 ? THREE.RGBAFormat : THREE.RGBFormat,\n\t\ttype: THREE.FloatType\n\t};\n\n};\n"]}